<odoo>
	<data>
		<template id="dashboard_speech_to_text_main_view">
			<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/shoelace-css/1.0.0-beta16/shoelace.css"/>
			<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"/>
			<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
			
			<!-- <xpath expr="." position="inside">
			 	<script src="/speech_to_text/static/src/js/script.js"></script>
			 </xpath> -->

        	<style>
        		body {
				  background: #00008B;
				  color: #F5F5F5;
				  font-size: 16px;
				}

        		ul {
				    list-style: none;
				    padding: 0;
				}

				p {
				    color: #F5F5F5;
				}

				button:focus {
				    outline: 0;
				}

				.container {
				    max-width: 700px;
				    margin: 0 auto;
				    padding: 100px 50px;
				    text-align: center;
				}

				.container h1 {
				    margin-bottom: 20px;
				}

				.page-description {
				    font-size: 1.1rem;
				    margin: 0 auto;
				}

				.tz-link {
				    font-size: 1em;
				    color: #1da7da;
				    text-decoration: none;
				}

				.no-browser-support {
				    display: none;
				    font-size: 1.2rem;
				    color: #e64427;
				    margin-top: 35px;
				}

				.app {
				    margin: 40px auto;
				}

				#note-textarea {
				    margin: 20px 0;
				}

				#recording-instructions {
				    margin: 15px auto 60px;
				}

				#notes {
				    padding-top: 20px;
				}

				.note .header {
				    font-size: 0.9em;
				    color: #888;
				    margin-bottom: 10px;
				}

				.note .delete-note,
				.note .listen-note {
				    text-decoration: none;
				    margin-left: 15px;
				}

				.note .content {
				    margin-bottom: 40px;
				}

				@media (max-width: 768px) {
				    .container {
				        padding: 50px 25px;
				    }

				    button {
				        margin-bottom: 10px;
				    }

				}   



				/* -- Demo ads -- */

				@media (max-width: 1200px) {
				    #bsaHolder{ display:none;}
				}

				.speech {border: 1px solid #DDD; width: 300px; padding: 0; margin: 0}
			    .speech input {border: 0; width: 240px; display: inline-block; height: 30px;}
			    .speech img {float: right; width: 40px }

			    .btn {
				  background-color: DodgerBlue;
				  border: none;
				  color: white;
				  padding: 8px 24px;
				  cursor: pointer;
				  font-size: 16px;
				}

				/* Darker background on mouse-over */
				.btn:hover {
				  background-color: SteelBlue ;
				}

        	</style>

        	<div class="container-fluid align-center">
        	<h3 class="no-browser-support">Sorry, Your Browser Doesn't Support the Web Speech API. Try Opening This Demo In Google Chrome.</h3>
	        <div class="app">
	            <div class="row">
	                <div class="col-md-6 align-center">
	                    <center>
	                    	<p class="thick" style="font-size:16pt;margin-top:-20px;">Add New Note</p>
	                    </center>

	                    <center>
	                    	<button style="height:5%" name="start-record-btn" id="start-record-btn" class="btn btn-primary btn-large" title="Start Recording"><i class="fa fa-microphone"></i> Start Recording </button>
	                    	<button style="height:5%" name="pause-record-btn" id="pause-record-btn" class="btn btn-primary btn-large" title="Pause Recording"><i class="fa fa-microphone-slash"></i> Pause Recording </button>
	                    </center>
		                <center>
		                	<p id="recording-instructions">Press the <strong>Start Recording</strong> button and allow access.</p>
		                </center>

						<form id="form_create" t-attf-action="/speech_to_text/save" method="POST" style="margin-top:-50px;">
							<input type="hidden" name="csrf_token" t-att-value="request.csrf_token()"/>
			                    <div class="input-single" style="margin:20px;">
			                        <textarea id="note-textarea" name="note" placeholder="Create a new note by typing or using voice recording." rows="14" required="1"></textarea>

			                        <label for="title"><b>Title</b></label>
    								<input type="text" placeholder="Title" id= "title" name="title" required="1"></input>
			                    </div>
			                    <center>
				                    <button type="submit" style="width:97%;height:5%;margin-top:-10px" name="submit_request" id="submit_request" class="btn btn-primary btn-large" title="Save Note"><i class="fa fa-save"></i> Save Note </button>
				                </center>
	                    </form>
	                </div>
	            </div>
	        </div>
	        </div>

			<script>
				window.setTimeout(function() { $(".alert-success").fadeTo(500, 0).slideUp(500, function(){ $(this).remove(); }); }, 3000); 

				try {
				    var SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
				    var recognition = new SpeechRecognition();
				} catch (e) {
				    console.error(e);
				    $('.no-browser-support').show();
				    $('.app').hide();
				}


				var noteTextarea = $('#note-textarea');
				var instructions = $('#recording-instructions');
				var notesList = $('ul#notes');

				var noteContent = '';



				/*-----------------------------
				      Voice Recognition 
				------------------------------*/

				// If false, the recording will stop after a few seconds of silence.
				// When true, the silence period is longer (about 15 seconds),
				// allowing us to keep recording even when the user pauses. 
				recognition.continuous = true;

				// This block is called every time the Speech APi captures a line.
				recognition.continuous = true;

				// This block is called every time the Speech APi captures a line. 
				recognition.onresult = function(event) {

				    // event is a SpeechRecognitionEvent object.
				    // It holds all the lines we have captured so far. 
				    // We only need the current one.
				    var current = event.resultIndex;

				    // Get a transcript of what was said.
				    var transcript = event.results[current][0].transcript;

				    // Add the current transcript to the contents of our Note.
				    // There is a weird bug on mobile, where everything is repeated twice.
				    // There is no official solution so far so we have to handle an edge case.
				    var mobileRepeatBug = (current == 1 &amp; transcript == event.results[0][0].transcript);

				    if (!mobileRepeatBug) {
				        noteContent += transcript;
				        noteTextarea.val(noteContent);
				    }
				};

				recognition.onstart = function() {
				    instructions.text('Voice recording activated. Try speaking into the microphone.');
				}

				recognition.onspeechend = function() {
				    instructions.text('You were quiet for a while so voice recording turned itself off.');
				}

				recognition.onerror = function(event) {
				    if (event.error == 'no-speech') {
				        instructions.text('No speech was detected. Try again.');
				    };
				}

				$('#start-record-btn').on('click', function(e) {
				    if (noteContent.length) {
				        noteContent += ' ';
				    }
				    recognition.lang = 'id-ID';
				    recognition.start();
				});

				$('#pause-record-btn').on('click', function(e) {
				    recognition.stop();
				    instructions.text('Voice recording paused.');
				});

				$('#submit_request').on('click', function(e) {
				    $('.alert alert-success').show();
				});

				// Sync the text inside the text area with the noteContent variable.
				noteTextarea.on('input', function() {
				    noteContent = $(this).val();
				})


			</script>

		</template>

		<template id="dashboard_speech_to_text_main_view2">
			<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/shoelace-css/1.0.0-beta16/shoelace.css"/>
			<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"/>
			<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
			<!-- <xpath expr="." position="inside">
			 	<script src="/speech_to_text/static/src/js/script.js"></script>
			 </xpath> -->

        	<style>
        		body {
				  background: #00008B;
				  color: #F5F5F5;
				  font-size: 16px;
				}

        		ul {
				    list-style: none;
				    padding: 0;
				}

				p {
				    color: #F5F5F5;
				}

				button:focus {
				    outline: 0;
				}

				.container {
				    max-width: 700px;
				    margin: 0 auto;
				    padding: 100px 50px;
				    text-align: center;
				}

				.container h1 {
				    margin-bottom: 20px;
				}

				.page-description {
				    font-size: 1.1rem;
				    margin: 0 auto;
				}

				.tz-link {
				    font-size: 1em;
				    color: #1da7da;
				    text-decoration: none;
				}

				.no-browser-support {
				    display: none;
				    font-size: 1.2rem;
				    color: #e64427;
				    margin-top: 35px;
				}

				.app {
				    margin: 40px auto;
				}

				#note-textarea {
				    margin: 20px 0;
				}

				#recording-instructions {
				    margin: 15px auto 60px;
				}

				#notes {
				    padding-top: 20px;
				}

				.note .header {
				    font-size: 0.9em;
				    color: #888;
				    margin-bottom: 10px;
				}

				.note .delete-note,
				.note .listen-note {
				    text-decoration: none;
				    margin-left: 15px;
				}

				.note .content {
				    margin-bottom: 40px;
				}

				@media (max-width: 768px) {
				    .container {
				        padding: 50px 25px;
				    }

				    button {
				        margin-bottom: 10px;
				    }

				}   



				/* -- Demo ads -- */

				@media (max-width: 1200px) {
				    #bsaHolder{ display:none;}
				}

				.speech {border: 1px solid #DDD; width: 300px; padding: 0; margin: 0}
			    .speech input {border: 0; width: 240px; display: inline-block; height: 30px;}
			    .speech img {float: right; width: 40px }

			    .btn {
				  background-color: DodgerBlue;
				  border: none;
				  color: white;
				  padding: 8px 24px;
				  cursor: pointer;
				  font-size: 16px;
				}

				/* Darker background on mouse-over */
				.btn:hover {
				  background-color: SteelBlue ;
				}

        	</style>

        	<div class="container-fluid align-center">
        	<h3 class="no-browser-support">Sorry, Your Browser Doesn't Support the Web Speech API. Try Opening This Demo In Google Chrome.</h3>
	        <div class="app">
	            <div class="row">
	                <div class="col-md-6 align-center">
	                    <center>
	                    	<p class="thick" style="font-size:16pt;margin-top:-20px;">Add New Note</p>
	                    </center>

	                    <center>
	                    	<button style="height:5%" name="start-record-btn" id="start-record-btn" class="btn btn-primary btn-large" title="Start Recording"><i class="fa fa-microphone"></i> Start Recording </button>
	                    	<button style="height:5%" name="pause-record-btn" id="pause-record-btn" class="btn btn-primary btn-large" title="Pause Recording"><i class="fa fa-microphone-slash"></i> Pause Recording </button>
	                    </center>
		                <center>
		                	<p id="recording-instructions">Press the <strong>Start Recording</strong> button and allow access.</p>
		                </center>

						<form id="form_create" t-attf-action="/speech_to_text/save" method="POST" style="margin-top:-50px;">
							<input type="hidden" name="csrf_token" t-att-value="request.csrf_token()"/>
			                    <div class="input-single" style="margin:20px;">
			                        <textarea id="note-textarea" name="note" placeholder="Create a new note by typing or using voice recording." rows="14" required="1"></textarea>

			                        <label for="title"><b>Title</b></label>
    								<input type="text" placeholder="Title" id= "title" name="title" required="1"></input>
			                    </div>
			                    <center>
				                    <button type="submit" style="width:97%;height:5%;margin-top:-10px" name="submit_request" id="submit_request" class="btn btn-primary btn-large" title="Save Note"><i class="fa fa-save"></i> Save Note </button>
				                </center>
	                    </form>
	                </div>
	            </div>
	        </div>
	        </div>

	        <div class="alert alert-success" role="alert" style="margin-top:-10px;margin-left:20px;margin-right:20px;">
				<strong>Success!</strong> Your note has been saved. 
			</div>

			<script>
				// alert success 5 second
				window.setTimeout(function() { $(".alert-success").fadeTo(500, 0).slideUp(500, function(){ $(this).remove(); }); }, 3000); 

				// browser not suport
				try {
				    var SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
				    var recognition = new SpeechRecognition();
				} catch (e) {
				    console.error(e);
				    $('.no-browser-support').show();
				    $('.app').hide();
				}


				var noteTextarea = $('#note-textarea');
				var instructions = $('#recording-instructions');
				var notesList = $('ul#notes');

				var noteContent = '';



				/*-----------------------------
				      Voice Recognition 
				------------------------------*/

				// If false, the recording will stop after a few seconds of silence.
				// When true, the silence period is longer (about 15 seconds),
				// allowing us to keep recording even when the user pauses. 
				recognition.continuous = true;

				// This block is called every time the Speech APi captures a line.
				recognition.continuous = true;

				// This block is called every time the Speech APi captures a line. 
				recognition.onresult = function(event) {

				    // event is a SpeechRecognitionEvent object.
				    // It holds all the lines we have captured so far. 
				    // We only need the current one.
				    var current = event.resultIndex;

				    // Get a transcript of what was said.
				    var transcript = event.results[current][0].transcript;

				    // Add the current transcript to the contents of our Note.
				    // There is a weird bug on mobile, where everything is repeated twice.
				    // There is no official solution so far so we have to handle an edge case.
				    var mobileRepeatBug = (current == 1 &amp; transcript == event.results[0][0].transcript);

				    if (!mobileRepeatBug) {
				        noteContent += transcript;
				        noteTextarea.val(noteContent);
				    }
				};

				recognition.onstart = function() {
				    instructions.text('Voice recording activated. Try speaking into the microphone.');
				}

				recognition.onspeechend = function() {
				    instructions.text('You were quiet for a while so voice recording turned itself off.');
				}

				recognition.onerror = function(event) {
				    if (event.error == 'no-speech') {
				        instructions.text('No speech was detected. Try again.');
				    };
				}

				$('#start-record-btn').on('click', function(e) {
				    if (noteContent.length) {
				        noteContent += ' ';
				    }
				    recognition.lang = 'id-ID';
				    recognition.start();
				});

				$('#pause-record-btn').on('click', function(e) {
				    recognition.stop();
				    instructions.text('Voice recording paused.');
				});

				$('#submit_request').on('click', function(e) {
				    $('.alert alert-success').show();
				});

				// Sync the text inside the text area with the noteContent variable.
				noteTextarea.on('input', function() {
				    noteContent = $(this).val();
				})


			</script>

		</template>
	</data>
</odoo>